#!/bin/bash

# Service Name

service="moviecat"

# Function getting list of secrets

function get_list_secrets() {

    echo $(docker exec vault vault kv get --format="json" kv/secrets/$1 | jq .data.data)

}

# Function getting secret

function get_secret() {

	echo $(docker exec vault vault kv get --field=$1 kv/secrets/$2)

}

# Getting domain

url=$(get_secret "url" "dns")

user=$(get_secret "user" "dns")

password=$(get_secret "password" "dns")

function get_domain() {

    curl -s "$url?authinfo=$user:$password&out=json&$1" | jq $2 | sed s/\"//g

}

domain=$(get_domain "func=domain" '.doc.elem[0].name."$"')

# Creating env file

echo "# Frontend" > .env

echo "" >> .env

echo "DANGEROUSLY_DISABLE_HOST_CHECK=true" >> .env

echo "" >> .env

echo "# Backend" >> .env

echo "" >> .env

echo "MAIL_DOMAIN=mail.$domain" >> .env

echo "DOMAIN=$domain" >> .env

echo "SMTP_USER=noreply@$domain" >> .env

keys_smtp=$(echo $(get_list_secrets "smtp") | jq -r 'keys[]')

for key_smtp in $keys_smtp; do

    secret=$(get_secret $key_smtp "smtp")

    echo "$(echo $key_smtp | tr [a-z] [A-Z])=$secret" >> .env

done

keys_service=$(echo $(get_list_secrets $service) | jq -r 'keys[]')

for key_service in $keys_service; do

    secret=$(get_secret $key_service $service)

    echo "$(echo $key_service | tr [a-z] [A-Z])=$secret" >> .env

done

# Restarting compose

docker compose down; docker compose build --no-cache; yes | docker builder prune; docker compose up -d